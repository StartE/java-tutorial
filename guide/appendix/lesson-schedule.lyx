#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-book
\begin_preamble
\input{../../../writing-common/book-preamble.tex}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
coderemarks
tip-inset
note-inset
warning-inset
theorems-bytype
theorems-chap-bytype
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "DejaVu Sans"
\font_sans "default" "DejaVu Serif"
\font_typewriter "default" "DejaVu Sans Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 3
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
建议的授课计划
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="middle" width="5line%">
<column alignment="left" valignment="middle" width="60line%">
<column alignment="left" valignment="middle" width="20line%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
序号
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
主要内容
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
说明
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
为什么要学习Java程序设计语言？
\end_layout

\begin_layout Itemize
Java语言的特点
\end_layout

\begin_layout Itemize
JDK的概念和安装
\end_layout

\begin_layout Itemize
使用Idea搭建Java开发环境，HelloWorld演示
\end_layout

\begin_layout Itemize
基于终端的Java开发
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
从一开始就强调读书和练习相结合，避免眼高手低
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
迅速回顾C的基本语法规则，包括变量、运算符、表达式、控制结构
\end_layout

\begin_layout Itemize
重点讲述Java语言在基本语法规则方面和C语言的差异
\end_layout

\begin_deeper
\begin_layout Itemize
Java变量命名常用驼峰命名法
\end_layout

\begin_layout Itemize
Java特有的运算符：new，instanceOf
\end_layout

\begin_layout Itemize
Java加强了的for循环
\end_layout

\begin_layout Itemize
Java加强了的switch分支结构
\end_layout

\begin_layout Itemize
不定长方法参数
\end_layout

\end_deeper
\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
由于Java语言和C语言在基础语法规则上90%是相同的，因此本部分可以快速通过，这样避免了学生过多的纠缠于语法细节，也减少了学习Java语言的恐惧感（被繁杂的语
法吓倒）。
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
类和对象的概念
\end_layout

\begin_layout Itemize
Java如何创建类？如何创建对象？
\end_layout

\begin_layout Itemize
构造方法的用法
\end_layout

\begin_layout Itemize
类的组织：包的用法
\end_layout

\begin_layout Itemize
类的层次结构：继承
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
由于大部分读者是第一次接触OOP，此部分可以稍微放慢授课的速度，通过大量的实例以及和生活中的现象类比掌握OOP的基本概念和用法。
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Java的访问控制
\end_layout

\begin_layout Itemize
理解引用类型，尤其是方法参数中的引用类型
\end_layout

\begin_layout Itemize
static的几种情形
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
建议通过反复的演示和练习使读者充分理解本部分内容。
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
抽象类等的概念及其用法
\end_layout

\begin_layout Itemize
接口是纯的抽象类，接口的设计目的
\end_layout

\begin_layout Itemize
多态的概念，多态的实现方法
\end_layout

\begin_layout Itemize
面向接口的编程
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
本部分内容比较抽象，建议重点放到抽象类和接口的概念和使用。
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
string类的常见方法
\end_layout

\begin_layout Itemize
数字的表达，字符串和数字的相互转化方法
\end_layout

\begin_layout Itemize
时间和日期的表达和常见处理方法
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Java异常的概念，注意和C语言的比较
\end_layout

\begin_layout Itemize
异常的分类，异常类的层次结构
\end_layout

\begin_layout Itemize
try-catch结构
\end_layout

\begin_layout Itemize
throw和throws的区别
\end_layout

\begin_layout Itemize
如何编写自定义异常类？
\end_layout

\begin_layout Itemize
try-with-resources结构的使用场合
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
理解异常的责任链机制是掌握Java异常处理的关键
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
流的概念（C语言中就有）
\end_layout

\begin_layout Plain Layout
面向字节和面向字符的流
\end_layout

\begin_layout Plain Layout
从键盘输入的方法
\end_layout

\begin_layout Plain Layout
文件的读写：NIO（Path，Files）
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
本部分内容多，重点是InputStream/OutputStream/Reader/Writer的用法，NIO可以作为较高要求处理
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Enum的概念（和C语言的对比）
\end_layout

\begin_layout Itemize
Java中的Enum是面向对象的
\end_layout

\begin_layout Itemize
工程实践中Enum的重要性
\end_layout

\begin_layout Itemize
switch中的Enum
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
窗口的基本概念
\end_layout

\begin_layout Itemize
Swing GUI设计常见组件：Panel，Jlabel等
\end_layout

\begin_layout Itemize
布局管理器
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
重点是学生要通过练习掌握起来，本部分不要求学生了解GUI的很多底层知识，学会使用Idea进行GUI界面设计即可。
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Swing的事件机制（在上节课中其实已经在不断使用，这里总结一下）
\end_layout

\begin_layout Itemize
匿名类在事件处理中的使用
\end_layout

\begin_layout Itemize
Java GUI综合示例
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
习题课
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
